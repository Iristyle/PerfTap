//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PerfTap {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class GetEventResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal GetEventResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("PerfTap.GetEventResources", typeof(GetEventResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internal performance counter API call failed. Error: {0:x8}..
        /// </summary>
        internal static string CounterApiError {
            get {
                return ResourceManager.GetString("CounterApiError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The {0} performance counter path  is not valid..
        /// </summary>
        internal static string CounterPathIsInvalid {
            get {
                return ResourceManager.GetString("CounterPathIsInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The default values for this command failed. Error: {0:x8}..
        /// </summary>
        internal static string CounterPathTranslationFailed {
            get {
                return ResourceManager.GetString("CounterPathTranslationFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The data in one of the performance counter samples is not valid. View the Status property for each PerformanceCounterSample object to make sure it contains valid data..
        /// </summary>
        internal static string CounterSampleDataInvalid {
            get {
                return ResourceManager.GetString("CounterSampleDataInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot retrieve information about the {0} performance counter set because access was denied..
        /// </summary>
        internal static string CounterSetEnumAccessDenied {
            get {
                return ResourceManager.GetString("CounterSetEnumAccessDenied", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to InvalidPattern=The specified wildcard pattern is not valid: {0}.
        /// </summary>
        internal static string InvalidPattern {
            get {
                return ResourceManager.GetString("InvalidPattern", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not find any performance counter sets on the {0} computer: error {1:x8}. Verify that the {0} computer exists, that it is discoverable, and that you have sufficient privileges to view performance counter data on that computer..
        /// </summary>
        internal static string NoCounterSetsOnComputer {
            get {
                return ResourceManager.GetString("NoCounterSetsOnComputer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot find any performance counter sets on the {0} computer that match the following: {1}..
        /// </summary>
        internal static string NoMatchingCounterSetsFound {
            get {
                return ResourceManager.GetString("NoMatchingCounterSetsFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internal privileges API call failed. Error: {0:x8}..
        /// </summary>
        internal static string PrivilegesApiError {
            get {
                return ResourceManager.GetString("PrivilegesApiError", resourceCulture);
            }
        }
    }
}
